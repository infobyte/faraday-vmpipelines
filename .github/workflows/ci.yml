name: CI

on:
  push:
    branches:
      - master

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Use Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#          architecture: 'x64'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Bandit (Python code checker)
#        run: bandit -r . -f xml -o flaskapp_faraday_bandit.xml || true
#
#      - name: Upload Bandit Report
#        uses: actions/upload-artifact@v2
#        with:
#          name: bandit-report
#          path: flaskapp_faraday_bandit.xml
#
#      - name: Add remote origin
#        run: |
#          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
#
#      - name: Deploy to Heroku
#        run: |
#          git push heroku HEAD:master -f
#
#
#  scan:
#    needs: [build]
#    runs-on: ubuntu-latest
#
#    container:
#      image: owasp/zap2docker-stable
#      options: --user root -v ${{ github.workspace }}:/zap/wrk/:rw
#
#    steps:
#    - name: run zap baseline scan
#      run: zap-baseline.py -t ${{ secrets.ZAP_SCAN_URL }} -x zap-report.xml || echo 0
#
#    - name: Upload Zap Report Artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: zap-report
#        path: zap-report.xml

  upload:
#    needs: [scan]
    runs-on: ubuntu-latest

    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Download Zap Report Artifact
      uses: actions/download-artifact@master
      with:
        name: zap-report
        path: zap-report

    - name: Download Bandit Report Artifact
      uses: actions/download-artifact@master
      with:
        name: bandit-report
        path: bandit-report

#     Faraday CLI approach
    - name: Upload Reports to Faraday
      run: |
        python -m pip install --upgrade pip
        pip install faraday-cli
        faraday-cli --auth -f ${{ secrets.FARADAY_HOST }} -u ${{ secrets.FARADAY_USERNAME }} -p ${{ secrets.FARADAY_PASSWORD }}
        faraday-cli create_ws ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }}
        faraday-cli process_report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} bandit-report/flaskapp_faraday_bandit.xml
        faraday-cli process_report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} bandit-report/zap-report.xml

#     Custom GHA approach
#    - name: Upload Reports to Faraday
#      uses: infobyte/gha-faraday-report-uploader@main
#      with:
#        host: ${{ secrets.FARADAY_HOST }}
#        username: ${{ secrets.FARADAY_USERNAME }}
#        password: ${{ secrets.FARADAY_PASSWORD }}
#        workspace: ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }}
#        files: bandit-report/flaskapp_faraday_bandit.xml zap-report/zap-report.xml