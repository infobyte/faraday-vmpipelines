name: CI

on:
  push:
    branches:
      - master

jobs:
#  build:
#    runs-on: ubuntu-latest

#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Use Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
#          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#
#      - name: Run Bandit (Python code checker)
#        run: bandit -r . -f html -o bandit-report.html || true
#
#      - name: Upload Bandit Report
#        uses: actions/upload-artifact@v2
#        with:
#          name: bandit-report
#          path: bandit-report.html
#
#      - name: Add remote origin
#        run: |
#          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
#
#      - name: Deploy to Heroku
#        run: |
#          git push heroku HEAD:master -f


  scan:
#    needs: [build]
    runs-on: ubuntu-latest

    container:
      image: owasp/zap2docker-stable
      options: --user root -v ${{ github.workspace }}:/zap/wrk/:rw

    steps:
    - name: run zap baseline scan
      run: zap-baseline.py -t https://faraday-vmpipelines.herokuapp.com -x zap-report.xml || echo 0

    - name: Upload Zap Report Artifact
      uses: actions/upload-artifact@v2
      with:
        name: zap-report
        path: zap-report.xml

  upload:
    needs: [scan]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Use Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"


    - name: Download Zap Report Artifact
      uses: actions/download-artifact@master
      with:
        name: zap-report
        path: zap-report.xml

    - name: Upload ZAP Report to Faraday
      run: |
        python $GITHUB_WORKSPACE/import_scan.py -b ${{ secrets.FARADAY_HOST }} -e ${{ secrets.FARADAY_EMAIL }} -p ${{ secrets.FARADAY_PASSWORD }} -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }} -f zap-report.xml